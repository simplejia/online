// Code generated by wsp, DO NOT EDIT.

package main

import "net/http"
import "time"
import "github.com/simplejia/online/controller/online"
import "github.com/simplejia/online/filter"

func init() {
	http.HandleFunc("/online/trans_cmd", func(w http.ResponseWriter, r *http.Request) {
		t := time.Now()
		_ = t
		var e interface{}
		_ = e
		c := new(online.Online)
		defer func() {
			e = recover()
			if ok := filter.Boss(w, r, map[string]interface{}{"__T__": t, "__C__": c, "__E__": e, "__P__": "/online/trans_cmd"}); !ok {
				return
			}
		}()
		if ok := filter.Auth(w, r, map[string]interface{}{"__T__": t, "__C__": c, "__E__": e, "__P__": "/online/trans_cmd"}); !ok {
			return
		}
		c.TransCmd(w, r)
	})

	http.HandleFunc("/online/trans_cmd_with_jump", func(w http.ResponseWriter, r *http.Request) {
		t := time.Now()
		_ = t
		var e interface{}
		_ = e
		c := new(online.Online)
		defer func() {
			e = recover()
			if ok := filter.Boss(w, r, map[string]interface{}{"__T__": t, "__C__": c, "__E__": e, "__P__": "/online/trans_cmd_with_jump"}); !ok {
				return
			}
		}()
		if ok := filter.Auth(w, r, map[string]interface{}{"__T__": t, "__C__": c, "__E__": e, "__P__": "/online/trans_cmd_with_jump"}); !ok {
			return
		}
		c.TransCmdWithJump(w, r)
	})

	http.HandleFunc("/online/trans_file", func(w http.ResponseWriter, r *http.Request) {
		t := time.Now()
		_ = t
		var e interface{}
		_ = e
		c := new(online.Online)
		defer func() {
			e = recover()
		}()
		if ok := filter.Auth(w, r, map[string]interface{}{"__T__": t, "__C__": c, "__E__": e, "__P__": "/online/trans_file"}); !ok {
			return
		}
		c.TransFile(w, r)
	})

	http.HandleFunc("/online/trans_file_with_jump", func(w http.ResponseWriter, r *http.Request) {
		t := time.Now()
		_ = t
		var e interface{}
		_ = e
		c := new(online.Online)
		defer func() {
			e = recover()
		}()
		if ok := filter.Auth(w, r, map[string]interface{}{"__T__": t, "__C__": c, "__E__": e, "__P__": "/online/trans_file_with_jump"}); !ok {
			return
		}
		c.TransFileWithJump(w, r)
	})

}